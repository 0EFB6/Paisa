name: Flutter CI
on:
  push:
    branches:
      - master
jobs:
  build_apk:
    name: Build Flutter APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - name: Flutter version
        run: flutter --version
      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Run pub get
      - run: flutter pub get
      - name: Run format code
      - run: flutter format --set-exit-if-changed .
      - name: Run Flutter clean
      - run: flutter clean
      - name: Run analyzer
        run: flutter analyze
      - name: Run tests
        run: flutter test
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.KEYSTORE }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> android/key.properties
      - name: Build Android App Bundle
        run: flutter build appbundle --flavor prod  --no-tree-shake-icons
      - name: Setup Ruby
          uses: actions/setup-ruby@v1
          with:
            ruby-version: '2.6'
      - name: Cache bundle dependencies
          uses: actions/cache@v2
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: ${{ runner.os }}-gems-
       - name: Download bundle dependencies
          run: |
            gem install bundler:2.0.2
            bundle config path vendor/bundle
            bundle install
        - name: Release to Google Play (beta)
          env:
            SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
            SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          run: |
            bundle exec fastlane supply \
            --aab build/app/outputs/bundle/release/app-release.aab \
            --track beta
      
      # - name: Run build release apk
      # - run: flutter run --release --flavor prod  --no-tree-shake-icons
      # - name: Push to Releases
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/flutter-apk/*"
      #     tag: v1.8.${{ github.run_number }}
